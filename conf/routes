# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET		/log						controllers.Application.getLog()
GET		/websocket					controllers.Application.websocket()

# Authentication
GET     /login                      		controllers.authentication.LoginController.login()
POST    /login                      		controllers.authentication.LoginController.authenticate()
GET     /logout                     		controllers.authentication.LoginController.logout()

GET		/jenkinsserver/:id					@controllers.data.JenkinsServerController.entity(id:Long)
POST	/jenkinsserver/:id					@controllers.data.JenkinsServerController.save(id:Long)
DELETE  /jenkinsserver/:id					@controllers.data.JenkinsServerController.delete(id:Long)
GET		/jenkinsserver/:id/analyzeServer	@controllers.data.JenkinsServerController.analyzeServer(id:Long)
GET		/jenkinsserver						@controllers.data.JenkinsServerController.entity(id:Long ?= -1L)
POST	/jenkinsserver						@controllers.data.JenkinsServerController.newInstance()

GET		/computer/:id						@controllers.data.ComputerController.entity(id:Long)
POST	/computer/:id						@controllers.data.ComputerController.save(id:Long)
DELETE  /computer/:id						@controllers.data.ComputerController.delete(id:Long)
GET		/computer							@controllers.data.ComputerController.entity(id:Long ?= -1L)

GET		/job/unstableList					@controllers.data.JobController.getUnstableJobs()
GET		/job/:id/history					@controllers.data.JobController.getHistory(id:Long)
GET		/job/:id							@controllers.data.JobController.entity(id:Long)
POST	/job/:id							@controllers.data.JobController.save(id:Long)
DELETE  /job/:id							@controllers.data.JobController.delete(id:Long)
GET		/job								@controllers.data.JobController.entity(id:Long ?= -1L)

GET		/user/:id							@controllers.data.UserController.entity(id:Long)
POST	/user/:id							@controllers.data.UserController.save(id:Long)
DELETE  /user/:id							@controllers.data.UserController.delete(id:Long)
GET		/user								@controllers.data.UserController.entity(id:Long ?= -1L)
POST	/user								@controllers.data.UserController.newInstance()

GET		/task/todayList						@controllers.data.TaskController.getTodaysList()
GET		/task/:id							@controllers.data.TaskController.entity(id:Long)
POST	/task/:id							@controllers.data.TaskController.save(id:Long)
DELETE  /task/:id							@controllers.data.TaskController.delete(id:Long)
GET		/task								@controllers.data.TaskController.entity(id:Long ?= -1L)
POST	/task								@controllers.data.TaskController.newInstance()

GET		/failure/:id						@controllers.data.FailureController.entity(id:Long)
POST	/failure/:id						@controllers.data.FailureController.save(id:Long)
DELETE  /failure/:id						@controllers.data.FailureController.delete(id:Long)
GET		/failure							@controllers.data.FailureController.entity(id:Long ?= -1L)
POST	/failure							@controllers.data.FailureController.newInstance()

GET		/testmethod/randomList/:id			@controllers.data.TestMethodController.getRandomList(id:Integer)
GET		/testmethod/forfailure/:id			@controllers.data.TestMethodController.forFailure(id:Long)
GET		/testmethod/:id/failures/:page		@controllers.data.TestMethodController.getTestFailures(id:Long, page:Integer)

GET		/issue/todayList					@controllers.data.IssueController.getTodaysList()
GET		/issue/:id							@controllers.data.IssueController.entity(id:Long)
POST	/issue/:id							@controllers.data.IssueController.save(id:Long)
DELETE  /issue/:id							@controllers.data.IssueController.delete(id:Long)
GET		/issue								@controllers.data.IssueController.entity(id:Long ?= -1L)
POST	/issue								@controllers.data.IssueController.newInstance()

# Map static resources from the /public folder to the /assets URL path
GET     /*file               		controllers.Assets.at(path="/public", file)
GET     /assets/*file               controllers.Assets.at(path="/public", file)
